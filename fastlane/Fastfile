# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

PROJECT_NAME = "TestCiDeploy"
XCODE_PROJECT = "./ios/#{PROJECT_NAME}.xcodeproj"
XCODE_WORKSPACE = "./ios/#{PROJECT_NAME}.xcworkspace"
OUTPUT_DIRECTORY = "./fastlane/builds"
IPA_DIRECTORY = "#{OUTPUT_DIRECTORY}/#{PROJECT_NAME}.ipa"
TESTERS_FILE = "./fastlane/testers.txt"
BUILD_FOR_DEVELOPMENT_ONLY = false # true = Build for Development | false = Build to create a release
BUILD_ONLY = true

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:ios)

platform :ios do

  private_lane :build do
    configuration_name = "Release"
    export_options_method = "development"
    code_sign_identity = "iPhone Developer"
    MY_APP_ID = ENV["APP_IDENTIFIER"]
    MY_PROFILE = "match Development #{ENV["APP_IDENTIFIER"]}"
    MY_TEAM = ENV["DEVELOPER_TEAM_ID"]

    
    increment_build_number(xcodeproj: XCODE_PROJECT)
    
    increment_version_number(
      bump_type: "patch",
      xcodeproj: XCODE_PROJECT,
    )

    settings_to_override = {
      :BUNDLE_IDENTIFIER => MY_APP_ID,
      :PROVISIONING_PROFILE_SPECIFIER => MY_PROFILE,
      :DEVELOPMENT_TEAM => MY_TEAM,
    }

    create_keychain(
      name: ENV["CI_KEYCHAIN_NAME"],  # in ci can be anything
      password: ENV["CI_KEYCHAIN_PASSWORD"],  # in ci can be anything
      default_keychain: true,
      unlock: true,
      timeout: 3600,
      lock_when_sleeps: false
    )

    api_key = app_store_connect_api_key(
      key_id: ENV["APP_STORE_CONNECT_API_KEY_ID"],
      issuer_id: ENV["APP_STORE_CONNECT_API_KEY_ISSUER_ID"],
      # the p8-file content of the key, e.g. "-----BEGIN EC PRIVATE KEY-----\nfewfawefawfe\n-----END EC PRIVATE KEY-----"
      key_content: ENV["APP_STORE_CONNECT_API_KEY_CONTENT"],
      duration: 1200, # optional (maximum 1200)
      in_house: false # optional but may be required if using match/sign
    )

    match(
      app_identifier: ENV["APP_IDENTIFIER"],
      api_key: api_key,
      git_basic_authorization: Base64.strict_encode64("#{ENV["GIT_ACCESS_TOKEN_USER_NAME"]}:#{ENV["GIT_ACCESS_TOKEN"]}"),
      # git_url: ENV["GIT_REPO_URL"],
      # type: "development",
      username: ENV["APPLE_ID"],
      team_id: ENV["DEVELOPER_TEAM_ID"],
      keychain_name: ENV["CI_KEYCHAIN_NAME"],
      keychain_password: ENV["CI_KEYCHAIN_PASSWORD"],
      readonly: true
    )

    update_code_signing_settings(
      use_automatic_signing: false,
      path: XCODE_PROJECT,
      code_sign_identity: code_sign_identity,
      bundle_identifier: MY_APP_ID,
      profile_name: MY_PROFILE
    )

    gym(
      scheme: PROJECT_NAME,
      workspace: XCODE_WORKSPACE,
      silent: true,
      configuration: configuration_name,
      xcargs: `#{settings_to_override} -UseNewBuildSystem=YES`,
      output_directory: OUTPUT_DIRECTORY,
      output_name: "#{PROJECT_NAME}.ipa",
      export_options: {
        method: "development",
        signingStyle: "manual",
        provisioningProfiles: { 
            MY_APP_ID => MY_PROFILE
        }
      }
    )

  end
  desc "Create Signed IPA Build"
  lane :beta do
    build
  end
end